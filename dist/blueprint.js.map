{
  "version": 3,
  "sources": ["../src/compare-semantic-version.ts", "../src/blueprint.ts"],
  "sourcesContent": [
    "export const compareSemanticVersion = (a: string, b: string): number => {\n  const aSemantic = a.split('.').map((s: string) => Number(s))\n  const bSemantic = b.split('.').map((s: string) => Number(s))\n  for (const i in aSemantic) {\n    if (aSemantic[i] > bSemantic[i]) {\n      return -1\n    } else if (bSemantic[i] > aSemantic[i]) {\n      return 1\n    }\n  }\n  return 0\n}\n",
    "/*!\n# code-editor\n\nInformation about the `<code-editor>` component blueprint.\n*/\n\nimport type { XinBlueprint, PartsMap } from 'xinjs'\nimport { compareSemanticVersion } from './compare-semantic-version'\ninterface ToggleParts extends PartsMap {\n  valueHolder: HTMLInputElement\n}\n\n// v0.8.5 required for async blueprints\nconst REQUIRED_VERSION = '0.8.5'\n\nconst ACE_BASE_URL = 'https://cdnjs.cloudflare.com/ajax/libs/ace/1.23.2/'\nconst DEFAULT_THEME = 'ace/theme/tomorrow'\n\nexport const blueprint: XinBlueprint = async (tag, factory) => {\n  const { Component, elements, vars, version } = factory\n  const { slot } = elements\n\n  const scriptTag = (url: string): Promise<any> => {\n    return new Promise((resolve) => {\n      const tag = elements.script({ src: url })\n      tag.onload = () => resolve(globalThis as any)\n      document.head.append(tag)\n    })\n  }\n\n  const { ace } = await scriptTag(`${ACE_BASE_URL}ace.min.js`)\n\n  if (compareSemanticVersion(REQUIRED_VERSION, version) < 0) {\n    throw new Error(`blueprint requires xinjs ${REQUIRED_VERSION}`)\n  }\n\n  class WebComponent extends Component {\n    source = ''\n    theme = DEFAULT_THEME\n    mode = 'javascript'\n    _options = {} as { [key: string]: any }\n    editor = null as any\n\n    constructor() {\n      super()\n\n      this.initAttributes('source', 'theme', 'mode')\n    }\n\n    static styleSpec = {\n      ':host': {\n        display: 'block',\n        minHeight: '100px',\n      },\n    }\n\n    content = () => slot()\n\n    connectedCallback() {\n      super.connectedCallback()\n\n      if (!this.source) {\n        this.source = this.innerHTML || ''\n      }\n\n      this.editor = ace.edit(this, {\n        mode: `ace/mode/${this.mode}`,\n        tabSize: 2,\n        useSoftTabs: true,\n        useWorker: false,\n        ...this.options,\n      })\n      this.editor.setValue(this.source)\n      this.editor.clearSelection()\n      this.editor.session.getUndoManager().reset()\n    }\n\n    role = 'textbox'\n\n    render() {\n      this.editor.setTheme(this.theme)\n    }\n  }\n\n  return {\n    type: WebComponent as typeof Component,\n  }\n}\n\nexport default blueprint\n"
  ],
  "mappings": "AAAO,IAAM,EAAyB,CAAC,EAAW,IAAsB,CACtE,IAAM,EAAY,EAAE,MAAM,GAAG,EAAE,IAAI,CAAC,IAAc,OAAO,CAAC,CAAC,EACrD,EAAY,EAAE,MAAM,GAAG,EAAE,IAAI,CAAC,IAAc,OAAO,CAAC,CAAC,EAC3D,QAAW,KAAK,EACd,GAAI,EAAU,GAAK,EAAU,GAC3B,MAAO,GACF,QAAI,EAAU,GAAK,EAAU,GAClC,MAAO,GAGX,MAAO;;;;ECGT,IAAM,EAAmB,QAEnB,EAAe,qDACf,EAAgB,qBAET,EAA0B,MAAO,EAAK,IAAY,CAC7D,IAAQ,YAAW,WAAU,OAAM,WAAY,GACvC,QAAS,EAEX,EAAY,CAAC,IAA8B,CAC/C,OAAO,IAAI,QAAQ,CAAC,IAAY,CAC9B,IAAM,EAAM,EAAS,OAAO,CAAE,IAAK,CAAI,CAAC,EACxC,EAAI,OAAS,IAAM,EAAQ,UAAiB,EAC5C,SAAS,KAAK,OAAO,CAAG,EACzB,IAGK,OAAQ,MAAM,EAAU,GAAG,aAAwB,EAE3D,GAAI,EAAuB,EAAkB,CAAO,EAAI,EACtD,MAAM,IAAI,MAAM,4BAA4B,GAAkB,EAGhE,MAAM,UAAqB,CAAU,CACnC,OAAS,GACT,MAAQ,EACR,KAAO,aACP,SAAW,CAAC,EACZ,OAAS,KAET,WAAW,EAAG,CACZ,MAAM,EAEN,KAAK,eAAe,SAAU,QAAS,MAAM,QAGxC,WAAY,CACjB,QAAS,CACP,QAAS,QACT,UAAW,OACb,CACF,EAEA,QAAU,IAAM,EAAK,EAErB,iBAAiB,EAAG,CAGlB,GAFA,MAAM,kBAAkB,GAEnB,KAAK,OACR,KAAK,OAAS,KAAK,WAAa,GAGlC,KAAK,OAAS,EAAI,KAAK,KAAM,CAC3B,KAAM,YAAY,KAAK,OACvB,QAAS,EACT,YAAa,GACb,UAAW,MACR,KAAK,OACV,CAAC,EACD,KAAK,OAAO,SAAS,KAAK,MAAM,EAChC,KAAK,OAAO,eAAe,EAC3B,KAAK,OAAO,QAAQ,eAAe,EAAE,MAAM,EAG7C,KAAO,UAEP,MAAM,EAAG,CACP,KAAK,OAAO,SAAS,KAAK,KAAK,EAEnC,CAEA,MAAO,CACL,KAAM,CACR,GAGa",
  "debugId": "B79B5B8400EAD9CF64756E2164756E21",
  "names": []
}